@model WebBlotter.Models.SBP_BlotterManualDeals

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>


@using (Html.BeginForm("Create", "BlotterManualDeals", FormMethod.Post))
{
    @Html.ValidationSummary(true)
    <fieldset>
        <h4>Blotter Manual Deals @ViewData["SysCurrentDt"]</h4>

        <div class="form-horizontal">
           
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
            <div class="form-group">
                @Html.LabelFor(x => Model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.DropDownListFor(x => Model.Description, 
                        new SelectList(Model.DescriptionDD, "Desc", "Desc"), 
                        htmlAttributes: new { @class = "form-control", id = "DescriptionDD" })
                    @Html.ValidationMessageFor(x => x.Description, "", new { @class = "text-danger" })
                </div>
            </div>
           
            @*<div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>*@          

            <div class="form-group">
                @Html.LabelFor(model => model.DealDate, htmlAttributes: new { @class = "control-label col-md-2"})           
              
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.DealDate, new { @Value = @ViewData["SysCurrentDt"].ToString() })*@
                    @Html.EditorFor(model => model.DealDate, new { @class = "form-control datepicker" })
                    
                    @Html.ValidationMessageFor(model => model.DealDate, "", new { @class = "text-danger" })
                </div>
            </div>            
            <div class="form-group">
                @Html.LabelFor(model => model.InFlow, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.InFlow, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InFlow, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.OutFlow, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OutFlow, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OutFlow, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">              
                @Html.HiddenFor(m => m.br, new { @Value = @ViewData["BrCode"] })             
            </div>                                
            <div class="form-group">
                @Html.HiddenFor(m => m.CurrentDate, new { @Value = @ViewData["SysCurrentDt"] })         
            </div>
            <div class="form-group">
                @Html.HiddenFor(m => m.DealStatus, new { @Value = "D" })

            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" />
                </div>
            </div>
        </div>
        </fieldset>
        }

        <div>
            @Html.ActionLink("Back to List", "GetAllManualDeals")
        </div>
