@model WebBlotter.Models.SBP_BlotterOpeningBalance
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="@Url.Content(" ~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content(" ~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm("Update", "BlotterOpenBal", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <Fieldset>
        <div class="form-horizontal">
            <h2>Edit Blotter Opening Balance</h2>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @if (ViewData["BR"].ToString() != "01")
            {
                <div class="form-group">
                    <label class="control-label col-md-2">Data Type</label>
                    <div class="col-md-10">
                        <select name="DataType" class="form-control">
                            @if (Model.DataType == "SBP")
                            {
                                <option value="SBP" selected="selected">State Bank of Pakistan</option>
                                <option value="HBLC">Habib Bank Limited</option>
                            }
                            else
                            {
                                <option value="SBP">State Bank of Pakistan</option>
                                <option value="HBLC" selected="selected">Habib Bank Limited</option>

                            }
                        </select>
                    </div>
                </div>
            }
                @if ((bool)ViewData["isDateChangable"])
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.BalDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">

                            @Html.EditorFor(model => model.BalDate, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control datepicker",
                               @Value = Model.BalDate.Value.Date.ToString("yyyy-MM-dd"),
                               autocomplete = "off"
                           }
                       })

                            @Html.ValidationMessageFor(model => model.BalDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
                @*<div class="form-group">
                @Html.LabelFor(model => model.BalDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.EditorFor(model => model.BalDate, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control datepicker",
                       @Value = Model.BalDate.Value.Date.ToString("yyyy-MM-dd")
                   }
               })

                    @Html.ValidationMessageFor(model => model.BalDate, "", new { @class = "text-danger", @Value = Model.BalDate.Value.Date.ToString("yyyy-MM-dd") })
                </div>
            </div>*@
                <div class="form-group">
                    @Html.LabelFor(model => model.OpenBalActual, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OpenBalActual, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.OpenBalActual, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input class="form-control" type="submit" value="Update" />
                    </div>
                </div>
            </div>
    </Fieldset>

}